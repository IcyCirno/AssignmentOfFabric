definitions:
  controller.RegisterUser:
    properties:
      name:
        description: 用户名
        type: string
      password:
        description: 密码
        type: string
    required:
    - name
    - password
    type: object
  controller.UserLogin:
    properties:
      name:
        description: 用户名
        type: string
      password:
        description: 密码
        type: string
    required:
    - name
    - password
    type: object
  controller.buy:
    properties:
      orderid:
        description: 交易订单ID
        type: string
    required:
    - orderid
    type: object
  controller.cancel:
    properties:
      orderid:
        description: 交易订单ID
        type: string
    required:
    - orderid
    type: object
  controller.cardCreate:
    properties:
      invest:
        description: 投资等级，用于随机稀有度
        type: integer
      name:
        description: 卡牌名称
        type: string
      profile:
        description: 卡牌描述
        type: string
    required:
    - invest
    - name
    type: object
  controller.hashID:
    properties:
      hashid:
        description: 卡牌唯一ID
        type: string
    required:
    - hashid
    type: object
  controller.mine:
    properties:
      hash_id:
        description: 卡牌唯一ID
        type: string
    required:
    - hash_id
    type: object
  controller.sell:
    properties:
      cost:
        description: 交易价格
        type: integer
      hashid:
        description: 卡牌唯一ID
        type: string
    required:
    - cost
    - hashid
    type: object
  dto.Card:
    properties:
      attack:
        type: integer
      avatar:
        type: string
      blood:
        type: integer
      cost:
        type: integer
      createat:
        type: string
      destroy:
        type: boolean
      hashid:
        type: string
      name:
        type: string
      ondefense:
        type: boolean
      onsale:
        type: boolean
      owner:
        type: string
      profile:
        type: string
      rarity:
        type: string
      transid:
        type: string
    type: object
  dto.User:
    properties:
      cards:
        items:
          type: string
        type: array
      create_at:
        type: string
      end_time:
        type: string
      gocoin:
        type: integer
      name:
        type: string
      password:
        type: string
      rank:
        type: integer
      trans:
        items:
          type: string
        type: array
    type: object
  model.CardAndTrans:
    properties:
      attack:
        type: integer
      avatar:
        type: string
      blood:
        type: integer
      card_id:
        type: string
      cost:
        type: integer
      create_at:
        type: string
      createat:
        type: string
      destroy:
        type: boolean
      hashid:
        type: string
      name:
        type: string
      ondefense:
        type: boolean
      onsale:
        type: boolean
      owner:
        type: string
      price:
        type: integer
      profile:
        type: string
      rarity:
        type: string
      receiver:
        type: string
      seller:
        type: string
      status:
        type: string
      trans_id:
        type: string
      transid:
        type: string
    type: object
  utils.APIResponse-array_dto_Card:
    properties:
      code:
        description: 状态码
        example: 200
        type: integer
      data:
        description: 返回数据，可以是任何类型
        items:
          $ref: '#/definitions/dto.Card'
        type: array
      error:
        description: 错误信息
        example: ""
        type: string
      msg:
        description: 描述信息
        example: 请求成功
        type: string
    type: object
  utils.APIResponse-array_model_CardAndTrans:
    properties:
      code:
        description: 状态码
        example: 200
        type: integer
      data:
        description: 返回数据，可以是任何类型
        items:
          $ref: '#/definitions/model.CardAndTrans'
        type: array
      error:
        description: 错误信息
        example: ""
        type: string
      msg:
        description: 描述信息
        example: 请求成功
        type: string
    type: object
  utils.APIResponse-dto_Card:
    properties:
      code:
        description: 状态码
        example: 200
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.Card'
        description: 返回数据，可以是任何类型
      error:
        description: 错误信息
        example: ""
        type: string
      msg:
        description: 描述信息
        example: 请求成功
        type: string
    type: object
  utils.APIResponse-dto_User:
    properties:
      code:
        description: 状态码
        example: 200
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/dto.User'
        description: 返回数据，可以是任何类型
      error:
        description: 错误信息
        example: ""
        type: string
      msg:
        description: 描述信息
        example: 请求成功
        type: string
    type: object
  utils.APIResponse-model_CardAndTrans:
    properties:
      code:
        description: 状态码
        example: 200
        type: integer
      data:
        allOf:
        - $ref: '#/definitions/model.CardAndTrans'
        description: 返回数据，可以是任何类型
      error:
        description: 错误信息
        example: ""
        type: string
      msg:
        description: 描述信息
        example: 请求成功
        type: string
    type: object
  utils.APIResponse-string:
    properties:
      code:
        description: 状态码
        example: 200
        type: integer
      data:
        description: 返回数据，可以是任何类型
        type: string
      error:
        description: 错误信息
        example: ""
        type: string
      msg:
        description: 描述信息
        example: 请求成功
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: 这是api文档
  title: API文档
  version: "1.0"
paths:
  /api/auth/card/cancel:
    post:
      consumes:
      - application/json
      description: 用户取消自己发起的卡牌交易订单
      parameters:
      - description: 交易订单ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controller.cancel'
      produces:
      - application/json
      responses:
        "200":
          description: 取消成功
          schema:
            $ref: '#/definitions/utils.APIResponse-model_CardAndTrans'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
        "500":
          description: 服务器内部错误或更新失败
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
      security:
      - ApiKeyAuth: []
      summary: 取消交易
      tags:
      - NFT
  /api/auth/card/destroy:
    post:
      consumes:
      - application/json
      description: 用户摧毁自己拥有的卡牌，卡牌不在市场中才可摧毁，摧毁后返还部分金币
      parameters:
      - description: 卡牌哈希ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controller.hashID'
      produces:
      - application/json
      responses:
        "200":
          description: 摧毁成功
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
        "400":
          description: 请求参数错误或卡牌在市场中
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
      security:
      - ApiKeyAuth: []
      summary: 摧毁卡牌
      tags:
      - NFT
  /api/auth/card/mint:
    post:
      consumes:
      - application/json
      description: 用户使用平台货币铸造新的卡牌，生成随机属性和稀有度
      parameters:
      - description: 卡牌铸造信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controller.cardCreate'
      produces:
      - application/json
      responses:
        "200":
          description: 铸造成功，返回卡牌信息
          schema:
            $ref: '#/definitions/utils.APIResponse-dto_Card'
        "400":
          description: 请求参数错误或资金不足
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
      security:
      - ApiKeyAuth: []
      summary: 铸造卡牌
      tags:
      - NFT
  /api/auth/card/query:
    post:
      consumes:
      - application/json
      description: 查询当前登录用户所拥有的所有卡牌信息
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功，返回用户卡牌列表
          schema:
            $ref: '#/definitions/utils.APIResponse-array_dto_Card'
        "500":
          description: 服务器内部错误或查询失败
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
      security:
      - ApiKeyAuth: []
      summary: 查询用户卡牌
      tags:
      - NFT
  /api/auth/card/sell:
    post:
      consumes:
      - application/json
      description: 用户将自己的卡牌上架市场进行交易
      parameters:
      - description: 卡牌上架信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controller.sell'
      produces:
      - application/json
      responses:
        "200":
          description: 创建交易成功，返回交易信息
          schema:
            $ref: '#/definitions/utils.APIResponse-model_CardAndTrans'
        "400":
          description: 请求参数错误或卡牌在市场中
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
        "500":
          description: 服务器内部错误或创建交易失败
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
      security:
      - ApiKeyAuth: []
      summary: 上架卡牌
      tags:
      - NFT
  /api/auth/market/buy:
    post:
      consumes:
      - application/json
      description: 用户购买市场上的卡牌交易订单，完成金币扣除和卡牌转移
      parameters:
      - description: 交易订单ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controller.buy'
      produces:
      - application/json
      responses:
        "200":
          description: 交易成功
          schema:
            $ref: '#/definitions/utils.APIResponse-model_CardAndTrans'
        "400":
          description: 请求参数错误或资金不足
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
        "500":
          description: 服务器内部错误或更新失败
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
      security:
      - ApiKeyAuth: []
      summary: 购买卡牌
      tags:
      - NFT
  /api/auth/market/query:
    post:
      consumes:
      - application/json
      description: 查询当前登录用户参与的所有卡牌交易订单
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功，返回交易列表
          schema:
            $ref: '#/definitions/utils.APIResponse-array_model_CardAndTrans'
        "500":
          description: 服务器内部错误或查询失败
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
      security:
      - ApiKeyAuth: []
      summary: 查询市场交易
      tags:
      - NFT
  /api/auth/user/mine:
    post:
      consumes:
      - application/json
      description: 用户对指定卡牌进行挖矿操作，冷却中或卡牌在市场上无法挖矿
      parameters:
      - description: 挖矿信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controller.mine'
      produces:
      - application/json
      responses:
        "200":
          description: 挖矿成功
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
        "400":
          description: 请求参数错误或冷却中/卡牌在市场上
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
      security:
      - ApiKeyAuth: []
      summary: 挖矿接口
      tags:
      - NFT
  /api/auth/user/profile:
    post:
      consumes:
      - application/json
      description: 根据当前登录用户的名字获取用户详细信息
      produces:
      - application/json
      responses:
        "200":
          description: 请求成功，返回用户信息
          schema:
            $ref: '#/definitions/utils.APIResponse-dto_User'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - User
  /api/login:
    post:
      consumes:
      - application/json
      description: 根据用户名和密码进行登录，成功后返回 Token
      parameters:
      - description: 登录信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controller.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功，返回Token
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
        "400":
          description: 请求参数错误或密码错误
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
      summary: 用户登录
      tags:
      - User
  /api/register:
    post:
      consumes:
      - application/json
      description: 用户注册接口，检查用户名是否存在并初始化账户信息
      parameters:
      - description: 注册信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controller.RegisterUser'
      produces:
      - application/json
      responses:
        "200":
          description: 注册成功
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
        "400":
          description: 请求参数错误或JSON解析失败
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
        "500":
          description: 服务器内部错误或Fabric操作失败
          schema:
            $ref: '#/definitions/utils.APIResponse-string'
      summary: 用户注册
      tags:
      - User
swagger: "2.0"
